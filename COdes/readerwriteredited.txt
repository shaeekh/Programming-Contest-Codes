/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author student
 */

package readerwriterproblem;

import java.util.Random;
import java.util.Scanner;
import java.util.concurrent.Semaphore;
import java.util.logging.Level;
import java.util.logging.Logger;

public class ReaderWriterProblem {
    
    static Scanner reader = new Scanner(System.in);
    static int[] array =new int[100];
    static Semaphore readlock = new Semaphore(1);
    static Semaphore writelock = new Semaphore(1);
    static int readcount  =0;
    static int n=0;
    static int head=0;
    static int tail=0;
    
    static class Read implements Runnable{
        @Override
        public void run(){
            
            try {
                readlock.acquire();
                readcount++;
                if(readcount==1){
                    writelock.acquire();
                }
                readlock.release();
                int random = (int) (Math.random()*head+0);
                System.out.println(Thread.currentThread().getName()+" is READING "+array[random]);
                Thread.sleep(1500);
                System.out.println(Thread.currentThread().getName()+" Leaves");
                
                readlock.acquire();
                readcount--;
                if(readcount==0){
                    writelock.release();
                }
                readlock.release();
            } 
          /*  catch (InterruptedException ex) {
                Logger.getLogger(ReaderWriterProblem.class.getName()).log(Level.SEVERE, null, ex);
            }*/
          catch(Exception e){
              System.out.println(e.getMessage());
          }
                
            
        }
    }
    
    static class Write implements Runnable{
        @Override
        public void run(){
            try{
                writelock.acquire();
                System.out.println(Thread.currentThread().getName()+" is WRITING");
                System.out.println("Enter numbers : ");
                for(int i=0;i<n;i++){
                    int a = reader.nextInt();
                    array[head]=a;
                    head++;
                }
                System.out.println("Data in buffer");
                for(int i=0;i<head;i++){
                    System.out.println(array[i]+" ");
                }
                Thread.sleep(2500);
                System.out.println("\n"+Thread.currentThread().getName()+" has finished WRITING");
                writelock.release();
                
            }
            catch(Exception e){
              System.out.println(e.getMessage());
          }
        }
    }
    
    public static void main(String[] args) {
        
        n = reader.nextInt();
        Read read = new Read();
        Write write = new Write();
        
        Thread t1 = new Thread(read);
        t1.setName("Reader1");
        
        Thread t2 = new Thread(read);
        t2.setName("Reader2");
        
        Thread t3 = new Thread(write);
        t3.setName("Writer1");
        
        Thread t4 = new Thread(read);
        t4.setName("Reader4");
        
        Thread t5 = new Thread(write);
        t5.setName("Writer2");
        
        t3.start();
        t5.start();
        t1.start();
        t2.start();
        t4.start();
    }
    
    
}
